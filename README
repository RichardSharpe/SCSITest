SCSITest is a software library that allows you to create SCSI tests.

It currently layers on top of Ronnie Sahlberg's libiscsi package. It is 
written in C++.

It could also wrap other facilities, like SCSI passthrough on Linux or Windows.
(SCSI Passthrough using sg devices on Linux. There are examples of how to do
SCSI Passthrough on Windows out there.)

The current structure is:

Top Level

  README   -- This document
  INSTALL  -- Simple installation document
  TODO     -- A list of things to possibly do
  Makefile -- a simple non-recursive Makefile
  patches  -- Any patches that might be needed
  examples -- The location of example programs
  src      -- The source
    iSCSI  -- The iSCSI Transport. Other transports could be added
    SCSI   -- The SCSI Classes. Currently implements:
      SCSIRequest -- Everything else derives from this class
      SCSITestUnitReady
      SCSIInquiry
      SCSIReportLuns
      SCSIReserve
      SCSIPersistentReserveIn
      SCSIPersistentReserveOut
      SCSIRead

So, you can see that there are plenty of SCSI requests yet to write, but 
most are easy.

Also, a note on the use of boost::thread and the iSCSIBackground task. This is
required if you plan on not sending requests on an iSCSI transport for long
periods of time (in particular, longer than the target's NOP_IN timeout)
because libiscis is syncrhrounous and does not get to handle NOP_IN requests
until we call back into it. One reason you might not get a chance to call
into libiscsi is that you have used ssh to shell into the system under test and
shut the file system down to check its effect on the target and are waiting for
that to complete.

NOTE! You might need to apply the patch in patches to libiscsi until Ronnie
Sahlberg has applied the changes I supplied him with.
